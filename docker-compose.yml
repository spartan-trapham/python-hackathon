version: '3.6'
services:
  db:
    image: postgis/postgis:14-3.3
    platform: linux/amd64
    restart: always
    environment:
      POSTGRES_USER: local
      POSTGRES_PASSWORD: local
      POSTGRES_DB: postgres
      POSTGRES_HOST_AUTH_METHOD: password
    networks:
      - app_net
    command: postgres -N 500
    ports:
      - 5432:5432
    volumes:
      - ./db-scripts:/docker-entrypoint-initdb.d
      - type: tmpfs
        target: /var/lib/postgresql/data

  redis:
    image: 'bitnami/redis:latest'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - app_net
    ports:
      - 6379:6379

  localstack:
    image: localstack/localstack
    environment:
      SERVICES: 'sqs'
      HOSTNAME: localstack
    networks:
      - app_net
    ports:
      - 4566:4566
      - 4572:4572
    volumes:
      - './scripts/sqs_bootstrap.sh:/etc/localstack/init/ready.d/sqs_bootstrap.sh'

  api:
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - app_net
    ports:
      - 8080:8080
    depends_on:
      - db
      - redis
      - localstack
    command: .venv/bin/fastapi run src/fast_api_app.py
  
  worker-internal:
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - app_net
    depends_on:
      - db
      - redis
      - localstack
    command: .venv/bin/celery -A src.workers.brokers.internal worker --loglevel=info

  worker-schduler:
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - app_net
    depends_on:
      - db
      - redis
      - localstack
    command: .venv/bin/celery -A src.workers.brokers.schduler worker --loglevel=info

networks:
  app_net:
    name: app
